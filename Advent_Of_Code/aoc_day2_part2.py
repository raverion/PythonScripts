A=1
B=2
C=3

X=0
Y=3
Z=6

enemyMoves = [C,A,B,A,A,A,B,A,B,C,B,C,A,C,B,B,B,C,B,B,A,B,A,B,B,B,A,C,C,A,B,A,C,C,C,C,B,B,B,A,A,C,A,C,B,C,B,C,C,C,C,A,A,C,A,A,A,A,B,A,B,B,B,B,A,B,C,C,A,A,B,C,A,C,C,B,B,C,A,A,C,C,B,A,C,B,C,B,C,B,C,A,C,B,C,B,A,B,C,C,B,C,C,A,A,A,A,C,C,A,C,C,A,C,B,A,B,A,B,C,A,C,C,B,C,C,A,C,C,B,B,A,B,C,A,B,C,B,C,B,B,B,B,B,B,C,A,A,A,C,B,C,B,C,A,B,B,C,A,A,C,B,A,C,A,A,A,A,A,B,B,B,B,C,B,A,C,A,A,B,A,C,C,A,B,C,C,B,B,C,B,C,A,B,B,C,A,B,B,C,A,B,A,C,C,A,B,C,B,B,B,A,C,B,B,A,B,B,A,B,C,A,B,C,A,B,A,C,A,B,C,C,B,C,A,A,B,B,C,A,A,C,A,C,B,C,A,A,A,A,A,B,B,B,A,C,C,A,C,A,A,C,B,A,C,B,C,C,C,B,A,B,B,A,C,B,A,B,C,A,A,C,A,A,C,A,C,C,B,A,B,A,C,B,B,B,A,C,C,B,C,C,C,C,A,B,C,B,B,B,B,B,C,B,B,C,B,C,C,B,A,B,B,A,B,C,B,B,A,C,C,A,C,B,B,C,B,A,C,A,B,C,A,C,B,B,B,B,B,C,A,B,B,B,B,B,C,A,B,C,A,C,C,A,A,A,B,C,A,B,A,A,A,A,A,A,A,A,A,C,C,C,C,A,A,B,A,A,B,B,B,A,A,B,C,C,A,C,C,B,A,A,C,A,C,C,C,B,A,C,A,A,C,B,A,A,A,C,C,B,C,B,C,A,B,C,C,B,C,A,B,A,C,A,A,A,B,A,A,C,B,B,A,B,C,C,A,C,C,B,A,B,A,B,C,A,B,B,B,C,A,A,B,B,C,C,C,C,A,B,B,C,C,B,A,A,C,C,A,A,C,A,C,B,A,B,C,A,A,B,B,C,C,C,B,C,C,C,C,B,A,A,A,B,C,B,B,B,A,B,C,C,C,B,B,B,A,A,A,B,C,B,C,B,A,B,B,B,B,B,B,C,A,B,B,C,A,B,C,B,C,C,A,C,B,B,C,B,C,A,B,A,C,A,C,C,B,A,A,B,C,C,B,C,A,A,A,C,C,B,C,A,C,A,C,A,B,C,C,B,A,B,A,B,C,B,A,C,A,C,B,B,B,C,B,B,C,A,A,B,C,C,C,A,C,B,B,A,B,A,A,B,B,C,C,B,A,B,B,C,A,B,C,B,C,B,A,A,C,B,C,A,A,B,A,B,C,B,C,C,A,A,A,B,C,B,A,B,B,A,C,C,A,C,C,B,A,B,A,A,C,B,C,C,B,C,B,A,A,C,B,B,B,B,B,B,C,B,C,C,A,A,B,B,B,B,C,B,B,A,C,B,C,C,A,A,B,C,B,C,C,B,B,B,C,A,A,C,A,A,B,C,C,B,B,C,C,B,C,B,A,B,C,B,C,C,A,B,A,C,A,A,C,C,C,A,C,A,B,A,B,B,A,C,B,B,C,A,B,A,C,A,A,A,B,B,B,B,B,B,C,B,A,C,C,A,C,C,B,C,B,C,B,A,B,C,B,A,C,B,C,C,A,B,C,B,A,B,A,C,B,C,B,B,C,B,A,C,B,A,C,A,A,B,B,C,C,C,A,B,B,A,A,B,C,C,B,C,B,C,B,A,A,B,A,A,A,A,B,A,B,C,B,C,B,B,A,B,A,A,C,A,C,B,A,C,C,B,B,A,C,C,C,C,A,B,B,B,C,C,C,A,A,C,C,B,B,B,B,A,A,C,B,B,B,B,C,A,A,B,B,B,B,A,B,C,A,A,C,C,B,B,A,B,A,A,C,A,B,C,B,A,B,B,B,B,C,A,C,C,B,A,B,A,B,B,A,C,B,A,A,B,A,B,B,C,A,B,B,C,A,C,A,C,B,A,B,A,C,B,A,A,B,B,C,C,C,B,C,A,C,A,C,A,B,B,C,B,B,B,C,B,C,A,C,B,A,C,C,A,A,C,C,B,C,A,A,A,C,C,B,C,B,A,C,B,C,A,A,C,B,B,A,C,B,C,B,B,A,C,C,A,C,A,C,B,A,C,B,C,B,A,A,B,B,B,C,C,B,A,A,B,C,C,B,B,C,C,A,C,C,B,A,B,B,C,C,B,C,B,A,B,B,B,C,A,A,B,C,B,A,A,A,C,C,C,C,C,A,B,C,A,C,A,B,B,B,A,B,B,B,B,B,B,B,B,A,C,B,B,C,A,B,B,C,B,C,B,A,B,C,A,B,C,B,B,C,B,C,C,C,C,C,A,C,B,A,B,A,B,B,A,C,A,B,B,C,C,A,A,B,C,A,C,B,B,C,B,B,B,C,C,B,A,A,B,B,C,A,C,B,B,A,B,A,A,B,B,B,B,C,B,B,C,B,C,B,B,B,B,A,B,A,A,C,B,B,B,C,A,C,C,A,C,C,B,B,A,B,C,C,C,B,B,B,A,A,C,A,B,C,B,B,B,B,C,B,A,A,A,B,C,C,A,A,B,A,C,B,A,B,A,B,B,B,B,C,C,A,B,C,C,B,B,A,C,C,A,A,C,C,C,A,B,C,B,B,C,C,C,B,B,A,B,C,C,B,B,A,A,B,B,A,A,B,B,B,B,B,C,B,B,C,B,B,C,B,A,C,B,A,B,C,C,C,A,B,A,A,C,C,C,C,C,C,B,B,B,C,C,A,C,B,B,A,A,C,C,A,A,A,B,B,A,A,A,B,C,B,B,B,C,C,B,B,B,B,C,B,B,C,C,B,A,A,A,C,C,A,A,B,B,C,A,B,A,B,A,B,B,C,C,A,A,B,C,A,B,A,C,B,B,B,C,C,B,A,B,B,A,C,C,A,A,A,A,A,A,C,A,B,A,A,C,B,B,B,B,B,A,B,C,A,A,B,B,C,C,A,C,A,B,B,A,A,A,A,C,C,A,C,A,B,C,C,C,B,C,A,A,C,A,A,A,B,C,A,C,C,B,C,B,B,C,A,A,A,B,A,B,B,C,C,A,A,B,C,B,B,C,A,C,A,B,A,B,C,B,C,B,B,B,B,C,B,B,A,A,B,A,B,B,A,A,C,C,B,B,C,B,C,B,C,A,B,B,B,C,B,B,A,B,A,C,B,B,B,B,C,B,B,B,A,C,B,B,A,C,C,C,B,A,C,A,A,C,A,A,A,B,B,B,C,B,B,A,B,B,C,B,C,A,A,A,A,C,A,C,C,C,B,B,B,A,A,B,A,C,C,B,B,B,A,A,B,C,B,A,C,B,B,A,C,C,A,A,B,C,C,A,B,C,A,A,C,C,B,C,C,B,A,A,B,C,B,C,B,C,B,B,A,A,B,C,B,C,C,C,A,B,C,B,C,B,A,B,A,C,C,C,C,B,C,B,B,A,B,A,B,A,C,B,A,B,B,B,B,C,B,A,B,C,C,A,C,B,B,B,A,B,C,B,A,A,B,B,A,B,C,A,A,B,A,B,A,B,C,C,C,C,B,A,B,B,C,B,C,C,A,A,C,A,C,B,B,B,C,B,C,B,A,A,B,B,B,C,B,C,A,B,A,A,C,B,B,A,A,A,C,A,A,B,C,A,A,B,A,B,B,C,C,C,B,C,A,B,A,B,B,B,C,B,C,C,B,C,B,A,B,B,A,C,C,C,B,A,C,A,A,C,C,B,C,C,A,C,B,A,A,C,A,B,B,C,A,B,B,B,B,B,B,B,A,B,B,B,C,A,A,A,A,B,A,A,B,A,C,B,B,B,B,C,A,B,C,A,C,B,C,C,A,C,C,C,B,B,B,B,A,C,A,A,C,B,C,C,B,B,C,B,B,A,B,A,A,B,B,B,B,B,B,A,C,C,B,C,B,A,B,C,B,B,B,B,A,B,C,B,C,A,A,C,B,C,B,A,C,C,C,A,B,C,B,B,A,C,A,C,A,B,C,B,B,C,A,A,C,B,B,B,A,B,B,C,A,B,A,B,B,B,C,B,C,B,B,C,A,C,C,C,B,B,B,B,C,B,B,B,A,A,A,A,C,B,B,C,B,B,B,A,C,B,B,B,A,A,B,C,B,A,B,B,B,B,A,C,B,C,C,A,A,C,C,A,B,B,B,B,C,B,A,C,B,A,B,B,B,C,A,A,C,B,A,C,A,B,A,B,C,C,B,A,A,B,A,C,C,C,B,C,B,B,B,C,B,C,C,A,B,B,B,B,C,A,B,A,C,A,A,B,A,C,B,C,B,C,A,C,B,B,B,A,B,B,B,B,A,C,C,B,C,A,B,C,B,B,B,A,A,A,B,C,C,B,B,A,C,A,A,C,A,C,C,A,C,C,A,B,B,A,C,C,B,C,B,A,C,C,C,C,C,A,C,B,C,C,B,C,A,A,B,A,B,B,B,C,B,B,B,B,C,C,B,B,C,B,B,B,B,A,C,C,B,B,B,B,C,C,A,A,B,B,B,C,C,B,A,C,C,C,B,B,C,C,B,C,C,C,C,C,B,B,B,B,B,C,B,B,C,C,C,C,A,B,C,C,B,C,B,A,A,C,C,C,A,C,C,C,C,B,C,B,C,C,C,A,B,A,B,A,C,A,C,B,B,B,A,A,B,B,B,B,A,B,B,C,B,A,C,B,A,B,C,C,C,B,B,C,B,A,C,A,A,B,C,B,B,A,A,B,A,A,A,C,A,A,A,C,C,B,A,B,B,A,A,B,B,C,C,C,B,C,B,B,A,A,B,C,A,A,A,A,C,B,C,A,B,B,B,B,C,B,C,B,B,C,C,A,A,A,A,C,A,A,B,B,A,A,C,C,A,B,B,C,C,B,C,B,C,C,B,C,A,B,B,B,C,B,A,C,B,B,B,B,A,A,A,A,B,B,B,C,A,C,B,A,B,B,B,A,C,B,B,A,B,C,A,B,C,B,B,A,C,C,B,C,C,A,A,B,B,A,C,B,C,C,C,C,C,A,C,B,A,B,C,B,B,A,A,C,B,A,B,A,B,B,B,A,B,B,B,A,B,C,B,B,B,A,B,C,B,B,A,A,B,A,B,C,B,B,C,B,C,C,C,C,B,B,B,A,B,A,C,B,A,B,C,A,B,A,B,B,C,C,A,A,B,C,C,A,A,B,B,B,B,A,C,A,B,B,C,A,A,C,B,B,A,B,C,C,C,C,B,A,A,B,A,A,B,C,C,B,C,A,B,A,A,C,C,A,C,B,A,A,C,B,A,B,C,B,B,A,B,C,B,B,B,A,C,A,A,B,B,B,C,A,B,B,C,B,B,A,B,A,A,C,B,B,A,B,A,A,A,B,A,C,B,B,B,B,B,B,B,A,C,B,B,B,C,B,A,B,C,B,C,C,A,B,B,A,C,C,A,B,B,C,C,A,B,B]
results = [Y,Z,Y,Z,X,Z,Y,Z,Y,Z,Y,Z,Z,Y,Y,Y,Y,Y,Y,Y,X,Y,Y,Y,Y,X,Y,Z,X,Z,Y,X,Y,X,Z,X,Y,Y,X,Z,X,Y,Z,Z,X,X,Y,X,Z,Y,Z,Y,Z,Z,Z,Z,Z,Z,Y,Z,Y,Y,Y,X,Z,X,Z,Z,Z,Z,Y,Y,X,Y,Y,Z,Y,X,X,Z,Z,X,Y,X,X,Y,X,Y,X,Y,Y,Z,Z,X,Y,Y,Z,X,Z,Z,Y,Z,X,X,Z,Z,Y,Z,Y,X,Z,Y,Z,X,X,Z,Y,Z,X,X,Z,Y,Z,Y,Y,X,Z,X,X,Y,Z,X,X,Y,Z,Y,Z,Y,Z,X,Y,X,Y,Y,Y,Y,Z,Y,Z,Z,Y,Z,Y,Y,Z,X,Y,Z,X,Y,X,X,Z,X,Y,X,Z,Z,Z,Y,Y,Z,Y,Y,Y,Z,X,Z,X,Y,X,X,X,X,X,X,Z,Y,Y,Y,X,X,Z,Y,Y,Z,Z,Y,X,Z,Y,Y,Y,Y,X,X,Y,X,Z,Y,Y,Z,Y,Y,Y,Y,Z,Z,Y,Y,Y,Z,Y,Z,Z,Y,Z,Y,X,Z,X,Y,Y,Y,Z,Z,Y,Y,Y,Y,Y,Y,Z,Y,X,X,X,Y,Z,Y,Z,Y,Y,Y,Z,Y,Z,Y,Y,Z,Z,Z,Y,Z,Z,Y,Y,Z,X,Y,Z,Y,Y,Z,X,Y,Z,Y,Y,Y,Z,X,Z,Y,Y,Z,Y,Y,X,Z,Y,Z,Y,Y,Y,Y,Z,Z,Y,Y,Z,Y,Y,Y,X,X,X,Y,Y,X,Y,Y,Z,Y,Z,X,Y,Y,Y,X,Z,Y,Y,Z,Y,Z,Y,Y,Z,Z,Z,Z,Y,Y,Y,Y,Z,Y,X,Z,X,Y,Z,Z,Y,X,Y,Y,Y,Z,Z,Y,X,Y,X,X,Z,Z,Y,Z,Z,Y,Y,Z,Z,Y,Y,X,Z,Y,Z,Z,Z,Y,Z,Z,Y,X,Z,Z,Y,Y,X,Z,Y,Y,Z,Z,Y,X,Y,Z,X,Y,Y,Y,Z,Y,X,Y,X,X,Y,X,Z,X,Y,Y,Z,Y,Z,Z,Z,Y,Z,Y,X,X,X,Y,X,Y,Z,Y,Y,Y,X,Y,Y,Z,Y,X,Y,Y,Z,Z,Y,Z,Z,X,Y,Y,Z,Y,Y,Z,Z,Z,Z,Y,Z,Y,Z,Z,Z,Y,Y,Y,Y,Y,X,X,X,Y,Z,Y,Y,Y,X,Y,Y,Z,X,Y,X,Z,Y,Y,Z,Z,Z,Z,Y,Y,X,Y,Z,Z,Y,Y,Z,Y,Y,X,Y,Y,Y,Y,Z,Y,Y,Y,Z,Y,X,X,X,X,Z,Y,Z,Z,X,Y,Y,Y,X,Z,Z,Y,Y,Y,Y,X,Z,Y,Y,Y,Y,Y,Y,X,Y,Y,Y,Y,Z,Y,X,X,Z,X,X,X,Y,Y,X,Y,Y,Z,Y,X,Y,X,Y,Y,Y,Y,Z,Y,Z,Z,Y,Z,Z,Y,Z,Y,Z,Y,Z,Z,X,Y,Z,Z,Y,Z,Y,Y,Z,X,Z,X,Z,Y,X,Y,Z,Y,Y,Y,Y,Y,Y,Y,X,Z,Z,Y,Y,Z,X,Z,Y,X,Y,X,Y,Z,Z,Y,X,Z,X,Z,Y,Y,Z,Y,Z,X,Y,Y,Z,Z,Y,X,X,Y,Y,X,Z,Y,Y,Z,X,Y,Y,X,Z,Y,Z,Y,Z,X,X,Y,Z,Z,Y,X,Z,Y,Z,X,Z,X,Z,Z,Y,Z,Y,Y,Y,X,X,X,Z,Z,X,X,X,Z,Y,Z,Y,Y,Y,Z,Z,X,Y,Y,Y,Y,X,Y,Y,X,X,Y,Z,Y,Z,Y,Y,Y,Y,X,X,Y,Y,Y,Y,Z,Y,X,Z,Z,Y,X,Y,Y,Y,Y,X,X,Y,X,Z,Y,X,X,Y,Y,Z,Y,Z,Y,Z,Z,Z,X,Y,Z,Z,Z,Y,X,Y,Y,Z,X,Z,Y,X,Y,Y,Z,Z,Z,Z,Z,Y,Y,X,Y,Y,Y,Z,Y,Z,X,Z,Z,Z,Y,Y,Y,X,Y,Y,Z,Y,X,Y,Z,Y,Y,Y,Z,X,X,X,X,X,Y,X,Z,Y,Z,Y,Y,Z,Y,Y,Z,Z,Z,X,Z,Z,Y,Y,Y,Z,X,Y,Y,Y,X,Y,X,Z,Z,Y,Y,Y,X,Z,Z,Z,Y,Y,Y,X,Z,Y,X,Z,Z,X,Z,X,Y,Y,X,Z,Z,Z,X,Z,Y,Y,Z,X,Y,Y,X,Y,X,Y,X,X,Y,X,Y,Y,Y,X,Y,Z,Y,Y,Y,X,Y,X,Z,Z,Z,Y,Y,Y,X,Z,Y,Z,Y,Y,Y,X,X,Y,Z,Z,Z,Y,Y,Y,Y,Z,Y,X,Z,Z,Z,Y,X,Y,X,Y,X,Y,X,X,Z,Z,Z,X,Z,Y,Z,X,Y,Z,Y,Y,Z,X,Y,Z,Y,Y,Y,Z,Y,Y,Y,Z,Z,Z,Z,Y,Z,Y,Z,Y,Y,X,Z,Y,Y,Z,Z,Z,Y,Y,X,X,X,Y,Y,X,Y,Z,Y,Y,X,Z,Y,X,Z,X,Y,X,X,Y,Z,X,Z,Z,Y,Y,Y,Z,Y,X,X,Y,Y,Y,Z,X,Y,Y,X,Z,Y,Y,Y,Y,X,Y,Y,Y,X,Z,Y,Y,X,X,Z,X,Y,X,Z,Y,X,Y,Z,Y,Y,X,Y,Y,Z,Y,Z,X,X,X,Z,Y,Y,X,Z,Z,Y,Z,Y,Z,Y,Y,Z,Z,Y,Y,Y,Z,X,Y,Y,X,Z,Z,Y,Y,Y,Z,Y,X,Z,Y,Z,Z,Z,Z,Y,Z,Z,Y,Z,Y,Y,Y,Z,Y,X,Y,Y,Y,Y,Y,Y,X,Z,X,Y,X,Z,Y,X,Y,Y,Y,Y,Z,Y,Y,X,Y,X,X,Y,Z,X,X,Y,X,Y,X,Z,X,Y,Z,X,Z,X,X,Z,Z,Z,X,Z,X,Y,X,Z,X,Y,Z,Z,Y,Y,Y,Z,Y,Y,Y,Z,Y,Z,X,X,X,X,Z,Y,Y,Y,Z,Y,Z,Z,Y,Y,Y,Y,X,Y,X,Z,X,X,X,Y,Y,Y,Z,Y,X,Y,X,X,Y,Y,Z,Y,Z,Y,Z,Z,Z,X,Y,Z,Y,X,Y,Y,X,Y,Z,Y,Z,X,X,X,X,Y,Y,Y,X,X,Y,Z,Z,Y,X,Y,Z,Z,Z,X,Z,Y,Y,X,X,Z,Y,Y,Y,Y,Z,Z,Y,Y,Z,Z,Y,X,Z,Y,X,Z,Z,Y,X,Y,Y,Y,X,Y,X,Z,X,Y,Y,Y,Z,Y,Z,Y,X,Y,Z,Z,X,Y,X,Z,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Z,Y,X,Y,Y,Z,Y,Z,Z,Y,Y,Y,Z,X,Y,Z,Y,Z,Z,Y,X,Y,Y,Z,X,Y,Y,Y,Y,Y,Y,X,Y,Z,Z,X,Z,X,X,Y,Z,Y,Y,X,Y,Y,Z,X,Y,Y,Y,Y,Y,Y,X,X,Y,Y,Z,Y,Z,Z,Y,Z,Z,Y,Y,Y,X,Y,Z,Y,Z,Y,X,X,Y,Z,Y,Y,X,Z,Y,Z,Y,X,Y,X,Z,X,Y,Z,Y,X,X,Z,X,Z,Y,X,Z,Z,Z,Y,Z,Y,Z,Z,Z,X,Y,Y,Y,Y,Z,Y,Y,Z,Y,Y,Y,Y,Y,Z,Z,Z,Y,Y,Z,X,Z,Z,Y,Z,Z,X,X,Y,Y,X,Z,Y,Y,Z,Z,Z,Z,Z,X,Y,Y,Z,X,Y,Y,X,X,Y,Y,Z,Z,X,Y,Z,Y,Y,Z,Z,X,Y,Y,Z,Y,Y,X,Z,Z,X,Y,Y,Y,Z,Y,X,Y,X,Y,Y,Y,X,Y,Z,Z,Z,Z,Y,Y,Y,Z,Z,Y,X,Y,Y,X,X,Y,X,Z,Y,Y,Y,Y,Y,Z,Z,Y,Z,Y,Y,Y,Y,Y,Z,Y,Y,Y,Z,Z,Y,X,Z,X,Y,Z,Y,Z,Y,Y,X,Y,X,Z,Z,X,Y,Y,Y,X,Y,Z,X,Y,Y,Y,X,Z,Z,Z,Z,Z,Y,Z,Z,Z,X,Y,X,Z,Y,Y,X,X,X,Y,Y,Y,X,X,Y,Z,Y,Z,Y,Y,Y,Z,Y,Z,Y,Z,Y,X,X,Z,Y,Y,Z,Z,Z,X,Y,Z,Z,Y,Z,Z,X,X,Y,Y,Y,Y,Y,Y,Z,Y,X,Y,Y,X,X,Y,Z,Y,Y,Y,Y,Y,Y,Y,Z,X,Z,Z,Y,Y,Y,X,X,X,Y,X,Y,Z,X,Y,Z,X,Z,Y,Y,Y,Y,Z,Y,Y,Z,Z,Z,Y,Y,Z,Z,Y,Z,X,Z,X,X,Y,X,Y,Y,Z,Y,Y,Z,Y,Y,Y,Z,Z,Y,Z,Y,Z,X,Y,Y,Y,Y,Y,Z,Z,X,Y,Z,Y,Y,Y,Y,X,Y,Y,Z,Y,Y,Y,Y,X,Y,Z,Y,X,Z,Z,X,Y,Y,Z,Y,Y,Z,Z,Y,Y,X,X,Y,Y,X,Y,X,Y,Z,X,Y,Y,Z,X,Z,Y,Y,Y,Y,Z,Z,Y,Y,Y,X,X,Y,Y,X,Y,Y,Z,X,Z,X,Z,Z,Z,Y,Y,Y,X,Z,Z,Y,Z,Z,Z,X,Y,Y,Y,Z,X,X,X,Y,Y,Y,Y,X,Y,Y,X,X,Z,Z,Z,Z,Y,Z,Z,X,Z,Y,Y,Y,Y,X,Z,Z,Y,X,X,Z,Y,Y,Z,Y,Z,X,Y,Z,Y,Y,Y,Z,Z,Z,Z,Z,X,Z,Y,X,Y,Y,Y,X,Y,Y,Z,Z,Y,Y,X,X,X,Y,Y,X,Y,Y,X,X,Z,Y,X,Y,Y,Y,Y,Z,Y,Z,Y,Z,X,Z,Y,Y,Z,Y,Y,X,X,Y,Z,Y,X,Y,Y,X,X,Z,X,Z,Y,Y,Y,Y,Y,Z,X,X,X,Y,Y,Y,Y,Y,X,Z,Y,Y,Y,Y,Y,Y,Y,X,X,X,X,Z,X,X,Z,Y,Y,Y,Y,Z,X,Y,Y,Z,X,Y,Z,Y,Y,Y,X,Y,Y,X,Y,Y,Y,Y,Y,Z,Z,X,Y,Y,X,Y,Y,X,Y,Y,X,Y,Y,Z,Z,Z,Z,Y,Z,Y,X,Y,Y,Z,Y,Z,X,Y,Z,Y,Y,Y,X,Z,X,Z,Y,Z,Y,Y,Y,Y,Y,Y,Z,Y,Z,Z,Y,X,X,Z,X,X,Z,Z,Y,X,Z,Y,Y,Y,Z,Y,Y,Y,Y,Y,Z,Y,Z,Z,X,Z,Z,Z,Y,Y,Z,Y,Z,Z,Z,Y,Y,Y,Z,Y,X,X,X,Z,Z,Y,X,Z,X,Y,Y,Y,X,Y,Z,X,X,Y,Y,Y,Y,Y,Z,Y,X,Z,Y,Z,Z,Y,Z,Y,X,Z,X,Y,X,Z,Z,X,X,Y,Z,Z,Y,Z,X,Z,X,Z,X,Y,Z,Y,X,Z,Y,Y,Z,Y,Y,X,Z,Y,Y,X,Y,Y,Z,X,Y,Z,Y,Y,Y,Y,Z,Z,Y,X,X,Y,X,Y,Y,Z,Z,X,Y,Y,Z,Z,Y,Z,X,Y,X,Y,Y,Z,X,Y,Y,Z,Y,X,Y,X,X,Y,Y,Y,Z,X,Y,X,Y,Y,X,Z,Y,Y,Z,Y,Y,Y,Y,Z,Z,Z,Y,X,X,Z,Y,Z,X,Z,Y,X,Y,Y,Z,Y,Z,Y,X,Z,Z,Z,Y,Y,Y,Z,X,Y,Z,Y,Y,Z,Y,Y,Z,Z,Z,X,Y,Y,Y,Y,Y,X,Y,Z,Y,Y,Y,X,Z,Z,X,Y,Y,Z,Z,Z,Y,Z,Z,Z,Y,Z,Y,Z,Z,Y,Y,Z,X,Y,Z,Y,X,Y,Y,Z,Y,X,Y,Y,Y,Z,Z,Y,X,X,Z,X,X,Y,Y,Z,Z,Z,Y,Y,Y,X,Y,Z,Y,Y,Z,Z,Z,Z,Z,Z,Y,Z,Z,Y,Y,Z,Z,X,Y,Z,Z,Y,X,X,Y,X,Y,Y,X,Y,Z,X,Y,X,Y,Y,Y,X,X,Y,Y,X,Y,Z,Z,Z,Z,Z,Y,Y,X,Z,Y,Z,X,Y,X,Y,X,X,Y,Y,Z,Y,Z,Y,X,X,Y,Y,Z,X,Y,Y,Y,Z,Y,Z,Y,Y,Z,Y,Y,Y,X,X,Y,Z,Z,X,Y,Z,Y,X,Y,Y,Z,Z,X,Y,Z,Y,Y,X,Y,X,Y,Y,X,Y,Z,Y,Z,Y,Y,Y,Y,Y,Z,X,Y,X,Z,Y,Z,X,Y,Y,Z,Y,Y,Y,X,X,Z,Y,Y,Y,Z,X,Z,Z,Y,Y,Y,Y,Z,Y,Y,X,Y,Y,Y,Z,Z,Y,Y,Z,Z,X,Y,Y,Y,Y,Z,Y,Z,Y,Y,Z,Z,X,Y,Y,Y,Z,X,Z,Y,Z,Y,Y,Z,Z,Y,Z,Z,Z,X,X,Y,Z,Z,X,X,Y,Y,Y,Z,Y,Y,Z,Z,Y,Y,Y,X,Z,Y,Y,Z,Z,Z,Y,Y,Y,Y,Y,Z,X,Y,Y,Y,Z,X,Y,Y,Y,X,Y,Z,Y,Z,Y,Y,Y,Y,Z,X,Z,Z,Z,Y,Y,Z,Y,X,Y,Y,Y,Y,Y,X,Z,Y,Y,Y,Z,X,Y,X,Z,Y,X,X,Z,Y,Y,Z,X,X,Z,X,Y,X,Z,X,X,Y]

myMoves = [None] * len(enemyMoves)

for i in range(len(enemyMoves)):
    if (enemyMoves[i]==1 and results[i]==0):
        myMoves[i] = 3
    elif (enemyMoves[i]==1 and results[i]==3):
        myMoves[i] = 1
    elif (enemyMoves[i]==1 and results[i]==6):
        myMoves[i] = 2
    elif (enemyMoves[i]==2 and results[i]==0):
        myMoves[i] = 1
    elif (enemyMoves[i]==2 and results[i]==3):
        myMoves[i] = 2
    elif (enemyMoves[i]==2 and results[i]==6):
        myMoves[i] = 3
    elif (enemyMoves[i]==3 and results[i]==0):
        myMoves[i] = 2
    elif (enemyMoves[i]==3 and results[i]==3):
        myMoves[i] = 3
    elif (enemyMoves[i]==3 and results[i]==6):
        myMoves[i] = 1

    results[i] = results[i] + myMoves[i]

sum_of_results = 0;
for result in results:
    sum_of_results = sum_of_results + result


print(sum_of_results)

